{"version":3,"sources":["components/Header.js","components/Footer.js","App.js","components/Loading.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/auth.js","stores/image.js","stores/index.js","components/logo.svg"],"names":["Component","observer","history","useHistory","useStores","UserStore","AuthStore","className","src","Logo","alt","to","activeClassName","exact","currentUser","attributes","username","type","onClick","logout","push","Footer","Home","lazy","History","About","Login","Register","App","fallback","path","component","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","then","loginedUser","error","logIn","logOut","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","catch","delete","id","removeItem","createWithoutData","destroy","console","log","window","uploader","observable","action","newList","this","list","concat","isLoading","append","length","hasmore","finally","values","pullUser","reSetUser","HistoryStore","reSet","newFilename","newFile","isUploading","message","storeContext","React","createContext","ImageStore","store","UseStores","useContext","module","exports"],"mappings":"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","file":"static/js/main.f0be1d21.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/Header.css'\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport Logo from './logo.svg'\nimport { Button } from 'antd'\nimport { observer } from 'mobx-react'\nimport useStores from '../stores/index.js'\nconst Component = observer(() => {\n    const history = useHistory()\n    const { UserStore, AuthStore } = useStores()\n\n    const handleLogin = () => {\n        history.push('./login')\n    }\n    const handleLogout = () => {\n        AuthStore.logout()\n    }\n    const HandleRegister = () => {\n        history.push('./register')\n    }\n\n    return (\n        <header className=\"globalHeader\">\n            <img src={Logo} className='headerLogo' alt=\"\" />\n            <nav>\n                <NavLink to=\"/\" activeClassName=\"active\" exact>首页</NavLink>\n                <NavLink to=\"/about\" activeClassName=\"active\" exact>关于</NavLink>\n                <NavLink to=\"/history\" activeClassName=\"active\" exact>上传历史</NavLink>\n            </nav>\n            {\n                UserStore.currentUser ?\n                    <div className=\"buttonWrapper\">\n                        <span> {UserStore.currentUser.attributes.username} </span>\n                        <Button type=\"primary\" onClick={handleLogout}>注销</Button>\n                    </div>\n                    :\n                    <div className=\"buttonWrapper\">\n                        <Button type=\"primary\" onClick={handleLogin}>登录</Button>\n                        <Button type=\"primary\" onClick={HandleRegister}>注册</Button>\n                    </div>\n            }\n\n        </header>\n    )\n})\nexport default Component;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <>\n            <footer>Footer</footer>\n        </>\n    )\n}\nexport default Footer;","import React, { lazy, Suspense } from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport { Switch, Route } from \"react-router-dom\";\nimport { Loading } from './components/Loading';\nconst Home = lazy(() => import(\"./pages/Home\"))\nconst History = lazy(() => import(\"./pages/History\"))\nconst About = lazy(() => import(\"./pages/About\"))\nconst Login = lazy(() => import(\"./pages/Login\"))\nconst Register = lazy(() => import(\"./pages/Register\"))\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={Loading()}>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/history' exact component={History} />\n            <Route path='/about' exact component={About} />\n            <Route path='/login' exact component={Login} />\n            <Route path='/register' exact component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nfunction Loading() {\n    return (\n        <div>loading</div>\n    )\n}\nexport { Loading }","import React from 'react';\nimport './style/index.css'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(\n  <Router>\n    <App /></Router>\n  ,\n  document.getElementById('root')\n);\n","import AV, { Query, User } from 'leancloud-storage';\nAV.init({\n    appId: \"koH0wSSDni6NORCOQXkLRrXg-gzGzoHsz\",\n    appKey: \"L3eWxyYSfIhyjfh3at4dwwWq\",\n    serverURL: \"https://koh0wssd.lc-cn-n1-shared.com\"\n});\n\nconst Auth = {\n    register(username, password) {\n        const user = new User()\n        user.setUsername(username)\n        user.setPassword(password)\n        return new Promise((resolve, reject) => {\n            user.signUp()\n                .then(\n                    (loginedUser) => resolve(loginedUser),\n                    (error) => reject(error)\n                )\n        })\n    },\n\n    login(username, password) {\n        return new Promise((resolve, reject) => {\n            User.logIn(username, password)\n                .then((loginedUser) => resolve(loginedUser),\n                    (error) => reject(error)\n                )\n        })\n    },\n\n    logout() {\n        User.logOut()\n    },\n\n    getCurrentUser() {\n        return User.current()\n    }\n\n}\n\nconst Uploader = {\n    add(file, filename) {\n        const item = new AV.Object('Image')\n        const avFile = new AV.File(filename, file)\n        item.set('filename', filename)\n        item.set('owner', User.current())\n        item.set('url', avFile)\n        return new Promise((resolve, reject) => {\n            item.save().then((serverFile) => {\n                resolve(serverFile)\n            }, (error) => reject(error))\n        })\n\n    },\n    find({ page = 0, limit = 10 }) {\n        const query = new Query('Image');\n        query.include('owner');\n        query.limit(limit);\n        query.skip(page * limit);\n        query.descending('createdAt');\n        query.equalTo('owner', User.current());\n        query.descending('createdAt');\n        return new Promise((resolve, reject) => {\n            query.find()\n                .then(results => resolve(results))\n                .catch(error => reject(error))\n        });\n    },\n    delete(id) {\n        const removeItem = AV.Object.createWithoutData('Image', id);\n        return new Promise((resolve, reject) => {\n            removeItem.destroy()\n                .then(item => resolve(item))\n                .catch(error => console.log('删除失败'))\n        })\n\n    }\n}\nwindow.uploader = Uploader\nexport { Auth, Uploader }","import { observable, action } from \"mobx\";\nimport { Auth } from '../models/index.js'\nclass UserStore {\n    @observable currentUser = null;\n    @action pullUser = () => {\n        this.currentUser = Auth.getCurrentUser()\n    }\n    @action reSetUser = () => {\n        this.currentUser = null;\n    }\n}\n\nexport default new UserStore();","import { observable, action } from \"mobx\";\nimport { Uploader } from '../models/index.js'\nimport UserStore from './user.js'\nimport resolve from \"resolve\";\n\nclass HistoryStore {\n    @observable list = [];\n    @observable isLoading = false;\n    @observable hasmore = true;\n    @observable page = 0;\n    limit = 10;\n\n    @action append(newList) {\n        this.list = this.list.concat(newList)\n    };\n\n    @action find() {\n        if (UserStore.currentUser) {\n            this.isLoading = true\n            Uploader.find({ page: this.page, limit: this.limit })\n                .then(newList => {\n                    this.append(newList)\n                    this.page++\n                    if (newList.length < this.limit) {\n                        this.hasmore = false\n                    }\n                })\n                .catch(error => console.log('数据加载失败'))\n                .finally(() => {\n                    this.isLoading = false\n                    console.log(this.list)\n                })\n        }\n\n    };\n    @action delete(id) {\n        return new Promise((resolve, reject) => {\n            Uploader.delete(id)\n                .then(item => {\n                    resolve(item)\n                })\n                .catch(error => reject(error))\n        })\n\n\n    };\n    @action reSet() {\n        this.list = [];\n        this.isLoading = false;\n        this.hasmore = true;\n        this.page = 0;\n    }\n}\n\nexport default new HistoryStore();","import { observable, action } from \"mobx\";\nimport { Auth } from '../models/index.js'\nimport UserStore from './user.js'\nimport HistoryStore from './history.js'\n\nclass AuthStore {\n    @observable values = {\n        password: '',\n        username: '',\n    };\n\n    @action setUsername = (username) => {\n        this.values.username = username\n    };\n    @action setPassword = (password) => [\n        this.values.password = password\n    ];\n    @action login = () => {\n        return new Promise((resolve, reject) => {\n            Auth.login(this.values.username, this.values.password)\n                .then((user) => {\n                    UserStore.pullUser()\n                    resolve(user)\n                })\n                .catch((error) => {\n                    UserStore.reSetUser()\n                    reject(error)\n                })\n        })\n    }\n    @action register = () => {\n        return new Promise((resolve, reject) => {\n            Auth.register(this.values.username, this.values.password)\n                .then((user) => {\n                    UserStore.pullUser()\n                    resolve(user)\n                })\n                .catch((error) => {\n                    UserStore.reSetUser()\n                    reject(error)\n                })\n        })\n    }\n\n    @action logout = () => {\n        UserStore.reSetUser()\n        Auth.logout()\n        HistoryStore.reSet()\n\n    }\n}\n\nexport default new AuthStore()","import { observable, action } from \"mobx\";\nimport { Uploader } from '../models/index.js'\nimport { message } from 'antd'\nclass ImageStore {\n    @observable file = null;\n    @observable filename = ''\n    @observable isUploading = false\n    @observable serverFile = null\n    @action setFilename = (newFilename) => {\n        this.filename = newFilename\n    }\n    @action setFile = (newFile) => {\n        this.file = newFile\n    }\n    @action upload = () => {\n        this.isUploading = true\n        this.serverFile = null\n        return new Promise((resolve, reject) => {\n            Uploader.add(this.file, this.filename).then((serverFile) => {\n                resolve(serverFile)\n                this.serverFile = serverFile\n            }, error => {\n                message.error('上传失败')\n                reject(error)\n            })\n                .finally(() => this.isUploading = false)\n        })\n    }\n}\n\nexport default new ImageStore();","import React from 'react';\nimport AuthStore from './auth.js'\nimport UserStore from './user.js'\nimport ImageStore from './image.js'\nimport HistoryStore from './history.js'\nconst storeContext = React.createContext({\n    AuthStore,\n    UserStore,\n    ImageStore,\n    HistoryStore,\n\n})\nwindow.store = {\n    AuthStore,\n    UserStore,\n    ImageStore,\n    HistoryStore,\n\n}\nconst UseStores = () => React.useContext(storeContext)\nexport default UseStores;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}