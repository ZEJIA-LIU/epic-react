{"version":3,"sources":["pages/Login.js"],"names":["layout","labelCol","span","offset","wrapperCol","Component","observer","history","useHistory","AuthStore","useStores","className","name","initialValues","remember","onFinish","values","setUsername","username","setPassword","password","login","then","push","message","success","catch","err","console","log","error","onFinishFailed","errorInfo","Item","label","rules","required","validator","rule","value","test","Promise","reject","length","resolve","Password","type","htmlType"],"mappings":"uIAAA,+FAMMA,EAAS,CACXC,SAAU,CACNC,KAAM,EAAGC,OAAQ,GAGrBC,WAAY,CACRF,KAAM,IAQRG,EAAYC,aAAS,WACvB,IAAMC,EAAUC,cACRC,EAAcC,cAAdD,UAyBR,OACI,yBAAKE,UAAU,eACX,4CACA,kBAAC,IAAD,iBAEQX,EAFR,CAGIY,KAAK,QACLC,cAAe,CACXC,UAAU,GAEdC,SA5BK,SAAAC,GACbP,EAAUQ,YAAYD,EAAOE,UAC7BT,EAAUU,YAAYH,EAAOI,UAC7BX,EAAUY,QACLC,MAAK,WACFf,EAAQgB,KAAK,KACbC,IAAQC,QAAQ,+BAEnBC,OAAM,SAACC,GACJC,QAAQC,IAAI,4BACZL,IAAQM,MAAM,wDAmBdC,eAfW,SAAAC,GACnBJ,QAAQC,IAAI,UAAWG,MAgBf,kBAAC,IAAKC,KAAN,CACIC,MAAM,qBACNtB,KAAK,WACLuB,MAAO,CACH,CACIC,UAAU,EACVZ,QAAS,wCAEb,CAAEa,UA7CG,SAACC,EAAMC,GAC5B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,iDAC1DD,QAAQG,cA6CH,kBAAC,IAAD,OAGJ,kBAAC,IAAKX,KAAN,CACIC,MAAM,eACNtB,KAAK,WACLuB,MAAO,CACH,CACIC,UAAU,EACVZ,QAAS,oCAIjB,kBAAC,IAAMqB,SAAP,OAGJ,kBAAC,IAAKZ,KAAN,CAAWtB,UAAU,cACjB,kBAAC,IAAD,CAAQmC,KAAK,UAAUC,SAAS,gBAAhC,sBAUL1C","file":"static/js/10.151b281a.chunk.js","sourcesContent":["import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { observer } from 'mobx-react';\nimport { Form, Input, Button, message } from 'antd';\nimport '../style/form.css'\nimport useStores from '../stores/index.js'\nconst layout = {\n    labelCol: {\n        span: 6, offset: 3\n\n    },\n    wrapperCol: {\n        span: 6,\n    },\n};\n\n\n\n\n\nconst Component = observer(() => {\n    const history = useHistory()\n    const { AuthStore } = useStores()\n    const validateUsername = (rule, value) => {\n        if (/\\W/.test(value)) return Promise.reject('只能是数字字母下划线')\n        if (value.length < 4 || value.length > 10) return Promise.reject('长度为4～10个字符')\n        return Promise.resolve()\n    }\n\n    const onFinish = values => {\n        AuthStore.setUsername(values.username)\n        AuthStore.setPassword(values.password)\n        AuthStore.login()\n            .then(() => {\n                history.push('/')\n                message.success('登录成功')\n            })\n            .catch((err) => {\n                console.log('登陆失败')\n                message.error('用户名密码不正确')\n            })\n    };\n\n    const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div className=\"formWrapper\">\n            <h2>登录</h2>\n            <Form\n\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"用户名\"\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入用户名',\n                        },\n                        { validator: validateUsername }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"密码\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入密码',\n                        }\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item className=\"formSummit\" >\n                    <Button type=\"primary\" htmlType=\"提交\" >\n                        提交\n                </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n\n\n})\nexport default Component;"],"sourceRoot":""}